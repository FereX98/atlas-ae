From bebb988b740d2114e9734a6a606589a8556d10ec Mon Sep 17 00:00:00 2001
From: Lei Chen <ls.cat@outlook.com>
Date: Sat, 26 Nov 2022 20:16:49 +0800
Subject: [PATCH 4/4] feat: redis robj with atlas runtime finish

---
 src/db.c | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/src/db.c b/src/db.c
index 99ef8503f..a005d4370 100644
--- a/src/db.c
+++ b/src/db.c
@@ -148,7 +148,7 @@ robj *atlasLookupKeyGet(redisDb *db, robj *key, int flags, atlas_unique_ptr_wh**
         if(is_atlas_ptr(val)){
             *up = (atlas_unique_ptr*)&(de->v.val);
             val = atlas_up_deref_get(*up);
-            serverLog(LL_NOTICE,"atlas found key 0x%lx, %p\n", (*up)->handle,(void*)val);
+            // serverLog(LL_NOTICE,"atlas found key 0x%lx, %p\n", (*up)->handle,(void*)val);
         }
         /* Forcing deletion of expired keys on a replica makes the replica
          * inconsistent with the master. We forbid it on readonly replicas, but
@@ -278,7 +278,7 @@ robj *atlasDbAddGet(redisDb *db, robj *key, robj *val, atlas_unique_ptr ** up) {
     dictEntry *de = dictAddRaw(db->dict, copy, NULL);
     serverAssertWithInfo(NULL, key, de != NULL);
     if(val->type == OBJ_STRING){
-        serverLog(LL_NOTICE,"dbAdd , val %p\n", (void*)val);
+        // serverLog(LL_NOTICE,"dbAdd , val %p\n", (void*)val);
         dictSetVal(db->dict, de, (robj*)atlas_make_unique_ptr(val, sizeof(robj)).handle);
         // *up = (atlas_unique_ptr*)&de->v.val;
         // val = atlas_up_deref_get(*up);
@@ -359,7 +359,7 @@ robj* atlasDbOverwriteGet(redisDb *db, robj *key, robj *val, atlas_unique_ptr **
         atlas_up_deref_put(*up, old);
         if(is_evicted){
             old->type = OBJ_ATLAS_EVICT_STRING;
-            serverLog(LL_NOTICE,"atlas evicted robj %p\n", old);
+            // serverLog(LL_NOTICE,"atlas evicted robj %p\n", old);
         }
         auxentry.v.val = old;
     }
-- 
2.25.1

